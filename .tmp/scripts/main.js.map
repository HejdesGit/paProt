{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,KAAf;;AAEA,EAAE,QAAF,EAAY,KAAZ,CAAkB,YAAY;AAC5B,SAAO,OAAP,CAAe,cAAf;AACA,IAAE,UAAF,EAAc,IAAd,CAAmB;AACjB,gBAAY,EADK;AAEjB,YAAQ,GAFS;AAGjB,YAAQ,GAHS;AAIjB,uBAAmB,KAJF;AAKjB,uBAAmB;AALF,GAAnB;;AAQA,IAAE,WAAF,EAAe,KAAf,CAAqB,YAAY;AAC/B,MAAE,WAAF,EAAe,IAAf;AACA,MAAE,MAAF,EAAU,IAAV;AACD,GAHD;;AAKA,IAAE,UAAF,EAAc,KAAd,CAAoB,YAAY;AAC9B,QAAI,EAAE,IAAF,EAAQ,QAAR,CAAiB,OAAjB,CAAJ,EAA+B;AAC7B,UAAI,EAAE,0BAAF,EAA8B,GAA9B,MAAuC,QAA3C,EAAqD;AACnD,UAAE,UAAF,EAAc,IAAd,CAAmB,YAAnB;AACD,OAFD,MAEO;AACL,UAAE,UAAF,EAAc,IAAd,CAAmB,WAAnB;AACD;AACF,KAND,MAMO;;AACL,UAAI,EAAE,UAAF,EAAc,GAAd,MAAuB,QAA3B,EAAqC;AACnC,UAAE,UAAF,EAAc,IAAd,CAAmB,YAAnB;AACD,OAFD,MAEO;AACL,UAAE,UAAF,EAAc,IAAd,CAAmB,WAAnB;AACD;AACF;AACF,GAdD;;AAiBA,MAAI,QAAQ,EAAZ;AACA,IAAE,iBAAF,EAAqB,IAArB,CAA0B,YAAY;AACpC,QAAI,QAAQ,EAAE,IAAF,EAAQ,IAAR,EAAZ;AACA,UAAM,IAAN,CAAW,KAAX;AAED,GAJD;;;AAOA,IAAE,UAAF,EAAc,KAAd,CAAoB,YAAY;AAC9B,QAAI,SAAJ;AACA,gBAAY,EAAE,IAAF,EAAQ,GAAR,EAAZ;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACrC,UAAI,MAAM,CAAN,EAAS,SAAT,CAAmB,CAAnB,EAAsB,UAAU,MAAhC,EAAwC,WAAxC,GAAsD,OAAtD,CAA8D,SAA9D,KAA4E,CAAhF,EAAmF;AACjF,UAAE,UAAF,EAAc,IAAd,CAAmB,UAAnB,EAA+B,CAA/B;AACD;AACF;AACF,GATD;;AAYA,IAAE,MAAF,EAAU,IAAV;;;;;;;;;AAWD,CA/DD","file":"main.js","sourcesContent":["\"use strict\";\n\nvar rattSvar = \"TOR\";\n\n$(document).ready(function () {\n  Hammer.plugins.fakeMultitouch();\n  $(\"#country\").drum({\n    panelCount: 10,\n    dail_w: 200,\n    dail_h: 200,\n    dail_stroke_color: 'red',\n    dail_stroke_width: 5\n  });\n\n  $('.nodbroms').click(function () {\n    $(\".nodbroms\").hide();\n    $(\"main\").show();\n  });\n\n  $('.chooser').click(function () {\n    if ($(this).hasClass(\"input\")) {\n      if ($(\".js-example-basic-single\").val() == rattSvar) {\n        $(\".awnswer\").text(\"RÄTT SVAR!\")\n      } else {\n        $(\".awnswer\").text(\"FEL SVAR!\")\n      }\n    } else { //@TODO HEJDE: $(this).hasClass(\"roller\")\n      if ($(\"#country\").val() == rattSvar) {\n        $(\".awnswer\").text(\"RÄTT SVAR!\")\n      } else {\n        $(\".awnswer\").text(\"FEL SVAR!\")\n      }\n    }\n  });\n\n\n  var names = [];\n  $(\"#country option\").each(function () {\n    var value = $(this).text();\n    names.push(value);\n\n  });\n\n  // Ska ta första bokstaven\n  $('.inputer').keyup(function () {\n    var typedWord;\n    typedWord = $(this).val();\n\n    for (var i = 0; i < names.length; i++) {\n      if (names[i].substring(0, typedWord.length).toLowerCase().indexOf(typedWord) >= 0) {\n        $(\"#country\").drum('setIndex', i);\n      }\n    }\n  });\n\n\n  $('main').hide();\n\n\n  //Dev\n  // $('.nodbroms').hide();\n  // $('main').show();\n  // $('.roller').hide();\n  //\n  // $('.chooser.scroll').hide();\n  // $('roller').hide();\n\n});\n\n// $(document).ready(function () {\n//\n//   (function(Hammer) {\n//   /**\n//    * enable multitouch on the desktop by pressing the shiftkey\n//    * the other touch goes in the opposite direction so the center keeps at its place\n//    * it's recommended to enable Hammer.debug.showTouches for this one\n//    */\n//   Hammer.plugins.fakeMultitouch = function() {\n//     // keeps the start position to keep it centered\n//     var start_pos = false;\n//\n//     // test for msMaxTouchPoints to enable this for IE10 with only one pointer (a mouse in all/most cases)\n//     Hammer.HAS_POINTEREVENTS = navigator.msPointerEnabled &&\n//       navigator.msMaxTouchPoints && navigator.msMaxTouchPoints >= 1;\n//\n//     /**\n//      * overwrites Hammer.event.getTouchList.\n//      * @param   {Event}     ev\n//      * @param   TOUCHTYPE   type\n//      * @return  {Array}     Touches\n//      */\n//     Hammer.event.getTouchList = function(ev, eventType) {\n//       // get the fake pointerEvent touchlist\n//       if(Hammer.HAS_POINTEREVENTS) {\n//         return Hammer.PointerEvent.getTouchList();\n//       }\n//       // get the touchlist\n//       else if(ev.touches) {\n//         return ev.touches;\n//       }\n//\n//       // reset on start of a new touch\n//       if(eventType == Hammer.EVENT_START) {\n//         start_pos = false;\n//       }\n//\n//       // when the shift key is pressed, multitouch is possible on desktop\n//       // why shift? because ctrl and alt are taken by osx and linux\n//       if(ev.shiftKey) {\n//         // on touchstart we store the position of the mouse for multitouch\n//         if(!start_pos) {\n//           start_pos = {\n//             pageX: ev.pageX,\n//             pageY: ev.pageY\n//           };\n//         }\n//\n//         var distance_x = start_pos.pageX - ev.pageX;\n//         var distance_y = start_pos.pageY - ev.pageY;\n//\n//         // fake second touch in the opposite direction\n//         return [\n//           {\n//             identifier: 1,\n//             pageX     : start_pos.pageX - distance_x - 50,\n//             pageY     : start_pos.pageY - distance_y - -50,\n//             target    : ev.target\n//           },\n//           {\n//             identifier: 2,\n//             pageX     : start_pos.pageX + distance_x - -50,\n//             pageY     : start_pos.pageY + distance_y - 50,\n//             target    : ev.target\n//           }\n//         ];\n//       }\n//       // normal single touch\n//       else {\n//         start_pos = false;\n//         return [\n//           {\n//             identifier: 1,\n//             pageX     : ev.pageX,\n//             pageY     : ev.pageY,\n//             target    : ev.target\n//           }\n//         ];\n//       }\n//     };\n//   };\n//\n// })(window.Hammer);\n// });\n//\n// $(document).ready(function () {\n//   Hammer.plugins.fakeMultitouch();\n// });\n"],"sourceRoot":"/source/"}